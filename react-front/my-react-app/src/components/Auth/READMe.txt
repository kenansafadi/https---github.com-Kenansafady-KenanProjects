Login.jsx:
הקובץ  אחראי למסך ההתחברות. הוא כולל את רכיב הטופס שבו המשתמש יכול להזין את כתובת הדוא"ל והסיסמה שלו. הקובץ עושה שימוש ב-Formik לטיפול בטפסים ובאמתיחה שלהם, כמו גם ב-Field ו-ErrorMessage לצורך הצגת שגיאות. הוא מבצע ולידציה של השדות תוך שימוש בפונקציות שנמצאות בקובץ Validation.js. במקרה של שגיאת התחברות, מוצגת הודעת שגיאה למשתמש. כאשר ההתחברות מצליחה, המשתמש מועבר לעמוד הבית (/), אם לא, תוצג הודעת שגיאה. בנוסף, ישנה קישור לשכחת סיסמה שמוביל לעמוד הייעודי לכך. כל הקוד מעוצב באמצעות קובץ ה-login.scss.

Logout.jsx:
הקובץ אחראי על פונקציית ההתנתקות של המשתמש.
 הוא עושה שימוש בהקשר AuthContext כדי לקרוא לפונקציה logout, אשר מנקה את המידע של המשתמש הנוכחי ומנתק אותו מהמערכת. לאחר ההתנתקות, המשתמש מועבר לעמוד ההתחברות (/login). הקובץ מיועד לשימוש בקומפוננטות ששייכות למערכת ניהול המשתמשים ומאפשר התנתקות בצורה קלה ונוחה.




הקובץ Register.jsx מאפשר למשתמשים להירשם לאתר. הוא משתמש במצבי React (useState) כדי לשמור את נתוני המשתמש שהוזנו, כמו שם, טלפון, כתובת, תמונה, סיסמה ועוד. לאחר שממלאים את הטופס, מתבצע שלב של אימות (כמו התאמת סיסמאות), ולאחר מכן הנתונים נשלחים לשרת דרך קריאה לשירות ההרשמה (authService.register). אם ההרשמה מצליחה, המשתמש מנותב לדף ההתחברות. אם יש טעות בהרשמה, הודעת שגיאה מוצגת למשתמש.

הקובץ Profile.jsx מציג את פרטי המשתמש המחובר. הוא משתמש בהקשר AuthContext כדי לקבל את המידע על המשתמש. כאשר המשתמש מחובר, הקובץ מבצע קריאה ל-API כדי לקבל את נתוני הפרופיל אם הם לא זמינים בהקשר. אם יש טעות בטעינת המידע, יוצג הודעת שגיאה. אם הכל תקין, מוצגים פרטי המשתמש כמו שם, אימייל, טלפון, רמת גישה וכתובת, כולל מפה אינטראקטיבית של המיקום. יש גם כפתור לעבור לעמוד עריכת הפרופיל.













